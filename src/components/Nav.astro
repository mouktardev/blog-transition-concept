---
import { cn } from "@/util/util";
const pathname = new URL(Astro.request.url).pathname;
---

<div class="relative w-full z-50 flex gap-8 items-center my-11">
	<button id="menu">
		<ul>
			<li class="w-7 h-[3px] my-2 rounded-full bg-black"></li>
			<li class="w-7 h-[3px] my-2 rounded-full bg-black"></li>
			<li class="w-7 h-[3px] my-2 rounded-full bg-black"></li>
		</ul>
	</button>
	<h1 id="nav-title" class="text-xl lg:text-3xl font-bold">
		This is where we tell stories
	</h1>
	<a
		id="contact"
		class="ml-auto p-4 whitespace-nowrap font-bold bg-black text-white"
		href="/"
	>
		Contact Us
	</a>
</div>
<div
	id="overlay"
	class="fixed top-0 -translate-x-full left-0 w-full h-full pointer-events-none z-40 bg-gray-950"
>
	<nav
		id="overlay-nav"
		class="container flex flex-col gap-5 w-full mx-auto p-5 mt-[200px]"
	>
		<hr class="scale-x-0 bg-white" />
		{
			[
				{ label: "About", href: "/" },
				{ label: "Portfolio", href: "/design" },
				{ label: "Testimonial", href: "/development" },
			].map((link) => (
				<>
					<a
						class="text-3xl opacity-0 -translate-x-10 font-bold text-white"
						href={link.href}
					>
						{link.label}
					</a>
					<hr class="scale-x-0 bg-white" />
				</>
			))
		}
	</nav>
</div>
<nav
	class="flex gap-4 flex-wrap items-center justify-center lg:justify-start border-t"
>
	{
		[
			{ label: "Latest", href: "/" },
			{ label: "Design", href: "/design" },
			{ label: "Development", href: "/development" },
			{ label: "Management", href: "/management" },
			{ label: "Marketing", href: "/marketing" },
		].map((link) => {
			const isActive =
				link.href === "/"
					? pathname === link.href
					: pathname.startsWith(link.href);
			return (
				<a
					transition:name={`link-${link.href}`}
					transition:animate="initial"
					class={cn(
						isActive && "font-bold border-black border-t-2",
						"tracking-wider p-2 cursor-pointer"
					)}
					href={link.href}
				>
					{link.label}
				</a>
			);
		})
	}
</nav>

<script>
	import { gsap } from "gsap";
	import { TextPlugin } from "gsap/TextPlugin";
	gsap.registerPlugin(TextPlugin);

	const getButton = () => document.getElementById("menu");

	function initHamburger() {
		const menu = getButton();
		const tl = gsap.timeline({ paused: true });
		tl.to(
			"#overlay",
			{
				duration: 1,
				translateX: 0,
				ease: "expo.inOut",
			},
			0
		)
			.to(
				"#nav-title",
				{
					duration: 1,
					text: {
						value: "Menu",
						delimiter: " ",
					},
					color: "white",
					ease: "steps(1)",
				},
				0
			)
			.to(
				"#contact",
				{
					duration: 1,
					color: "black",
					backgroundColor: "white",
					ease: "expo.inOut",
				},
				0
			)
			.to(
				"#overlay-nav hr ",
				{
					duration: 1,
					delay: 0.5,
					transformOrigin: "left",
					scaleX: 1,
					stagger: 0.2,
				},
				0
			)
			.to(
				"#overlay-nav a",
				{
					duration: 0.5,
					delay: 0.7,
					opacity: 1,
					translateX: 0,
					stagger: 0.3,
				},
				0
			)
			.to(
				"#menu ul li:nth-child(1)",
				{
					duration: 1,
					rotate: "225deg",
					y: 12,
					backgroundColor: "white",
					ease: "expo.inOut",
				},
				0
			)
			.to(
				"#menu ul li:nth-child(2)",
				{
					duration: 1,
					rotate: "180deg",
					scale: 0,
					backgroundColor: "white",
					ease: "expo.inOut",
				},
				0
			)
			.to(
				"#menu ul li:nth-child(3)",
				{
					duration: 1,
					rotate: "315deg",
					y: -10,
					backgroundColor: "white",
					ease: "expo.inOut",
				},
				0
			);
		tl.reverse();
		menu?.addEventListener("click", () => {
			tl.reversed(!tl.reversed());
		});
		return () =>
			menu?.removeEventListener("click", () => tl.reversed(!tl.reversed()));
	}

	let destroy = initHamburger();

	document.addEventListener("astro:after-swap", () => {
		destroy();

		const button = getButton();
		if (!button) return;

		destroy = initHamburger();
	});
</script>
